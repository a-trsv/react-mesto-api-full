{"ast":null,"code":"var _jsxFileName = \"/Users/AleksiTarasov/Desktop/develop/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport ConfirmCardDelete from './ConfirmCardDelete';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport ProtectedRoute from './ProtectedRoute';\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoToolTip from './InfoTooltip'; //Иконки для попапа\n\nimport successImg from '../images/success.jpeg';\nimport notSuccessImg from '../images/not-success.jpeg';\nimport auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  {\n    /* Заготовка для реализации попапа с подтверждением удаления карточки */\n  }\n  const [isDeleteCardPopupOpen, setDeleteCardPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  {\n    /* Устанавливаем стейт для 12 спринта */\n  }\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [isInfoToolTipOpen, setInfoToolTipOpen] = React.useState(false);\n  const [email, setEmail] = React.useState('');\n  const [authMessage, setAuthMessage] = React.useState({\n    img: '',\n    text: ''\n  });\n  const history = useHistory();\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getCards()]).then(([userData, apiData]) => {\n      setCurrentUser(userData);\n      setCards(apiData); // console.log(apiData)\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c !== card));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateUser(userData) {\n    api.patchUserInfo(userData).then(userData => {\n      setCurrentUser(userData); // console.log(userData)\n\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(apiData) {\n    api.postCard(apiData).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(userData) {\n    api.patchUserAvatar(userData).then(userData => {\n      setCurrentUser(userData); // console.log(userData)\n\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  }\n\n  function handleInfoToolTipOpen() {\n    setInfoToolTipOpen(true);\n  }\n\n  function handleInfoToolTipAuthMessage({\n    img,\n    text\n  }) {\n    setAuthMessage({\n      img: img,\n      text: text\n    });\n  }\n\n  function registration(password, email) {\n    auth.register(password, email).then(res => {\n      if (res.status === 201) {\n        handleInfoToolTipAuthMessage({\n          img: successImg,\n          text: 'Вы успешно зарегестрировались!'\n        });\n        handleInfoToolTipOpen();\n        setTimeout(history.push, 3500, '/sign-in');\n        setTimeout(closeAllPopups, 2500);\n      } else {\n        handleInfoToolTipAuthMessage({\n          img: notSuccessImg,\n          text: 'Что-то пошло не так! Попробуйте еще раз!'\n        });\n        handleInfoToolTipOpen();\n        setTimeout(closeAllPopups, 2500);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function authorize(password, email) {\n    auth.authorization(password, email).then(data => {\n      auth.checkToken(data).then(res => {\n        setEmail(res.data.email);\n      }).catch(err => console.log(err));\n      setLoggedIn(true);\n      setTimeout(history.push, 3000, '/');\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.checkToken(jwt).then(data => {\n        setLoggedIn(true);\n        setEmail(data.data.email);\n        history.push('/');\n      }).catch(err => console.log(err));\n    }\n  }, [history]);\n\n  function handleSignOut() {\n    setLoggedIn(false);\n    localStorage.removeItem('jwt');\n    setEmail('');\n    history.push('/sign-in');\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setImagePopupOpen(false);\n    setSelectedCard({});\n    setInfoToolTipOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page__content\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        email: email,\n        onSignOut: handleSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: registration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: authorize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/\",\n          component: Main,\n          loggedIn: loggedIn,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onUpdateUser: handleUpdateUser,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onUpdateAvatar: handleUpdateAvatar,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onAddPlace: handleAddPlaceSubmit,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmCardDelete, {\n        isOpen: isDeleteCardPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isOpen: isImagePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n        isOpen: isInfoToolTipOpen,\n        authMessage: authMessage,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"p3KWPfxK+hyNLcXdAGYqr9O77rk=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/AleksiTarasov/Desktop/develop/react-mesto-auth/src/components/App.js"],"names":["React","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","ConfirmCardDelete","api","CurrentUserContext","ProtectedRoute","Redirect","Route","Switch","useHistory","Register","Login","InfoToolTip","successImg","notSuccessImg","auth","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isImagePopupOpen","setImagePopupOpen","isDeleteCardPopupOpen","setDeleteCardPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","isInfoToolTipOpen","setInfoToolTipOpen","email","setEmail","authMessage","setAuthMessage","img","text","history","useEffect","Promise","all","getUserInfo","getCards","then","userData","apiData","catch","err","console","log","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","patchUserInfo","closeAllPopups","handleAddPlaceSubmit","postCard","handleUpdateAvatar","patchUserAvatar","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleInfoToolTipOpen","handleInfoToolTipAuthMessage","registration","password","register","res","status","setTimeout","push","authorize","authorization","data","checkToken","jwt","localStorage","getItem","handleSignOut","removeItem"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport ImagePopup from './ImagePopup'\nimport ConfirmCardDelete from './ConfirmCardDelete'\nimport api from '../utils/api'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport ProtectedRoute from './ProtectedRoute'\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom'\nimport Register from './Register'\nimport Login from './Login'\nimport InfoToolTip from './InfoTooltip'\n//Иконки для попапа\nimport successImg from '../images/success.jpeg'\nimport notSuccessImg from '../images/not-success.jpeg'\nimport auth from '../utils/auth'\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false)\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false)\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false)\n    const [isImagePopupOpen, setImagePopupOpen] = React.useState(false)\n    {/* Заготовка для реализации попапа с подтверждением удаления карточки */ }\n    const [isDeleteCardPopupOpen, setDeleteCardPopupOpen] = React.useState(false)\n    const [selectedCard, setSelectedCard] = React.useState({})\n    const [currentUser, setCurrentUser] = React.useState({})\n    const [cards, setCards] = React.useState([])\n    {/* Устанавливаем стейт для 12 спринта */ }\n    const [loggedIn, setLoggedIn] = React.useState(false)\n    const [isInfoToolTipOpen, setInfoToolTipOpen] = React.useState(false)\n    const [email, setEmail] = React.useState('')\n    const [authMessage, setAuthMessage] = React.useState({ img: '', text: '' })\n    const history = useHistory();\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getCards()])\n            .then(([userData, apiData]) => {\n                setCurrentUser(userData)\n                setCards(apiData)\n                // console.log(apiData)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards((state) => state.filter((c) => c !== card))\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleUpdateUser(userData) {\n        api.patchUserInfo(userData)\n            .then((userData) => {\n                setCurrentUser(userData)\n                // console.log(userData)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleAddPlaceSubmit(apiData) {\n        api.postCard(apiData)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleUpdateAvatar(userData) {\n        api.patchUserAvatar(userData)\n            .then((userData) => {\n                setCurrentUser(userData)\n                // console.log(userData)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupOpen(true)\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true)\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true)\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n        setImagePopupOpen(true)\n    }\n\n    function handleInfoToolTipOpen() {\n        setInfoToolTipOpen(true)\n    }\n    function handleInfoToolTipAuthMessage({ img, text }) {\n        setAuthMessage({ img: img, text: text })\n    }\n\n    function registration(password, email) {\n        auth.register(password, email)\n            .then((res) => {\n                if (res.status === 201) {\n                    handleInfoToolTipAuthMessage({ img: successImg, text: 'Вы успешно зарегестрировались!' })\n                    handleInfoToolTipOpen();\n                    setTimeout(history.push, 3500, '/sign-in');\n                    setTimeout(closeAllPopups, 2500)\n                } else {\n                    handleInfoToolTipAuthMessage({ img: notSuccessImg, text: 'Что-то пошло не так! Попробуйте еще раз!' })\n                handleInfoToolTipOpen()\n                setTimeout(closeAllPopups, 2500);\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function authorize(password, email) {\n        auth.authorization(password, email)\n            .then((data) => {\n                auth.checkToken(data)\n                    .then((res) => {\n                        setEmail(res.data.email)\n                    })\n                    .catch(err => console.log(err))\n                setLoggedIn(true);           \n                setTimeout(history.push, 3000, '/');\n        }) \n        .catch((err) => {\n            console.log(err)\n        })\n    }\n\n    React.useEffect(() => {\n        const jwt = localStorage.getItem('jwt')\n        if (jwt) {\n            auth.checkToken(jwt)\n            .then((data) =>{\n                setLoggedIn(true)\n                setEmail(data.data.email)\n                history.push('/')\n            })\n            .catch(err => console.log(err))\n        }\n    }, [history])\n\n    function handleSignOut() {\n        setLoggedIn(false)\n        localStorage.removeItem('jwt')\n        setEmail('')\n        history.push('/sign-in')\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false)\n        setAddPlacePopupOpen(false)\n        setImagePopupOpen(false)\n        setSelectedCard({})\n        setInfoToolTipOpen(false)\n    }\n\n    return (\n        <div className=\"page__content\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header loggedIn={loggedIn} email={email} onSignOut={handleSignOut}/>\n                <Switch>\n                    {/* Регистрация нового пользователя */}\n                    <Route path=\"/sign-up\">\n                        <Register\n                            onRegister={registration}\n                        />\n                    </Route>\n                    {/* Авторизация существующего пользователя */}\n                    <Route path=\"/sign-in\">\n                        <Login\n                            onLogin={authorize}\n                        />\n                    </Route>\n                    {/* Отрисовываем сайт для авторизованного пользователя */}\n                    <ProtectedRoute\n                        path=\"/\"\n                        component={Main}\n                        loggedIn={loggedIn}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n\n                    />\n                </Switch>\n                {/* <Main\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick}\n                /> */}\n                <Footer />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onUpdateUser={handleUpdateUser}\n                    onClose={closeAllPopups}\n                />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    onClose={closeAllPopups}\n                />\n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onAddPlace={handleAddPlaceSubmit}\n                    onClose={closeAllPopups}\n                />\n\n                {/* Заготовка для реализации попапа с подтверждением удаления карточки */}\n                <ConfirmCardDelete\n                    isOpen={isDeleteCardPopupOpen}\n                    onClose={closeAllPopups}\n                />\n\n                <ImagePopup\n                    card={selectedCard}\n                    isOpen={isImagePopupOpen}\n                    onClose={closeAllPopups}\n                />\n                <InfoToolTip\n                    isOpen={isInfoToolTipOpen}\n                    authMessage={authMessage}\n                    onClose={closeAllPopups}\n                />\n            </CurrentUserContext.Provider>\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}