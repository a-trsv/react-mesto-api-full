{"ast":null,"code":"import _toConsumableArray from\"/Users/AleksiTarasov/Desktop/develop/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/AleksiTarasov/Desktop/develop/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import Header from'./Header';import Main from'./Main';import Footer from'./Footer';import EditProfilePopup from'./EditProfilePopup';import EditAvatarPopup from'./EditAvatarPopup';import AddPlacePopup from'./AddPlacePopup';import ImagePopup from'./ImagePopup';import ConfirmCardDelete from'./ConfirmCardDelete';import api from'../utils/api';import{CurrentUserContext}from'../contexts/CurrentUserContext';import ProtectedRoute from'./ProtectedRoute';import{Route,Switch,useHistory}from'react-router-dom';import Register from'./Register';import Login from'./Login';import InfoToolTip from'./InfoTooltip';//Иконки для попапа\nimport successImg from'../images/success.jpeg';import notSuccessImg from'../images/not-success.jpeg';import auth from'../utils/auth';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isEditAvatarPopupOpen=_React$useState2[0],setEditAvatarPopupOpen=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isEditProfilePopupOpen=_React$useState4[0],setEditProfilePopupOpen=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),isAddPlacePopupOpen=_React$useState6[0],setAddPlacePopupOpen=_React$useState6[1];var _React$useState7=React.useState(false),_React$useState8=_slicedToArray(_React$useState7,2),isImagePopupOpen=_React$useState8[0],setImagePopupOpen=_React$useState8[1];{/* Заготовка для реализации попапа с подтверждением удаления карточки */}var _React$useState9=React.useState(false),_React$useState10=_slicedToArray(_React$useState9,2),isDeleteCardPopupOpen=_React$useState10[0],setDeleteCardPopupOpen=_React$useState10[1];var _React$useState11=React.useState({}),_React$useState12=_slicedToArray(_React$useState11,2),selectedCard=_React$useState12[0],setSelectedCard=_React$useState12[1];var _React$useState13=React.useState({}),_React$useState14=_slicedToArray(_React$useState13,2),currentUser=_React$useState14[0],setCurrentUser=_React$useState14[1];var _React$useState15=React.useState([]),_React$useState16=_slicedToArray(_React$useState15,2),cards=_React$useState16[0],setCards=_React$useState16[1];{/* Устанавливаем стейт для 12 спринта */}var _React$useState17=React.useState(false),_React$useState18=_slicedToArray(_React$useState17,2),loggedIn=_React$useState18[0],setLoggedIn=_React$useState18[1];var _React$useState19=React.useState(false),_React$useState20=_slicedToArray(_React$useState19,2),isInfoToolTipOpen=_React$useState20[0],setInfoToolTipOpen=_React$useState20[1];var _React$useState21=React.useState(''),_React$useState22=_slicedToArray(_React$useState21,2),email=_React$useState22[0],setEmail=_React$useState22[1];var _React$useState23=React.useState({img:'',text:''}),_React$useState24=_slicedToArray(_React$useState23,2),authMessage=_React$useState24[0],setAuthMessage=_React$useState24[1];var history=useHistory();React.useEffect(function(){Promise.all([api.getUserInfo(),api.getCards()]).then(function(_ref){var _ref2=_slicedToArray(_ref,2),userData=_ref2[0],apiData=_ref2[1];setCurrentUser(userData);setCards(apiData);// console.log(apiData)\n}).catch(function(err){console.log(err);});},[]);function handleCardLike(card){// Снова проверяем, есть ли уже лайк на этой карточке\nvar isLiked=card.likes.some(function(i){return i._id===currentUser._id;});// Отправляем запрос в API и получаем обновлённые данные карточки\napi.changeLikeCardStatus(card._id,!isLiked).then(function(newCard){setCards(function(state){return state.map(function(c){return c._id===card._id?newCard:c;});});}).catch(function(err){console.log(err);});}function handleCardDelete(card){api.deleteCard(card._id).then(function(){setCards(function(state){return state.filter(function(c){return c!==card;});});}).catch(function(err){console.log(err);});}function handleUpdateUser(userData){api.patchUserInfo(userData).then(function(userData){setCurrentUser(userData);// console.log(userData)\ncloseAllPopups();}).catch(function(err){console.log(err);});}function handleAddPlaceSubmit(apiData){api.postCard(apiData).then(function(newCard){setCards([newCard].concat(_toConsumableArray(cards)));closeAllPopups();}).catch(function(err){console.log(err);});}function handleUpdateAvatar(userData){api.patchUserAvatar(userData).then(function(userData){setCurrentUser(userData);// console.log(userData)\ncloseAllPopups();}).catch(function(err){console.log(err);});}function handleEditAvatarClick(){setEditAvatarPopupOpen(true);}function handleEditProfileClick(){setEditProfilePopupOpen(true);}function handleAddPlaceClick(){setAddPlacePopupOpen(true);}function handleCardClick(card){setSelectedCard(card);setImagePopupOpen(true);}function handleInfoToolTipOpen(){setInfoToolTipOpen(true);}function handleInfoToolTipAuthMessage(_ref3){var img=_ref3.img,text=_ref3.text;setAuthMessage({img:img,text:text});}function registration(password,email){auth.register(password,email).then(function(res){if(res.status===201){handleInfoToolTipAuthMessage({img:successImg,text:'Вы успешно зарегестрировались!'});handleInfoToolTipOpen();setTimeout(history.push,3500,'/sign-in');setTimeout(closeAllPopups,2500);}else{handleInfoToolTipAuthMessage({img:notSuccessImg,text:'Что-то пошло не так! Попробуйте еще раз!'});handleInfoToolTipOpen();setTimeout(closeAllPopups,2500);}}).catch(function(err){console.log(err);});}function authorize(password,email){auth.authorization(password,email).then(function(data){auth.checkToken(data).then(function(data){setEmail(data.data.email);}).catch(function(err){return console.log(err);});setLoggedIn(true);history.push('/');}).catch(function(err){console.log(err);});}React.useEffect(function(){var jwt=localStorage.getItem('jwt');if(jwt){auth.checkToken(jwt).then(function(data){setLoggedIn(true);setEmail(data.data.email);history.push('/');}).catch(function(err){return console.log(err);});}},[history]);function handleSignOut(){setLoggedIn(false);localStorage.removeItem('jwt');setEmail('');history.push('/sign-in');}function closeAllPopups(){setEditAvatarPopupOpen(false);setEditProfilePopupOpen(false);setAddPlacePopupOpen(false);setImagePopupOpen(false);setSelectedCard({});setInfoToolTipOpen(false);}return/*#__PURE__*/_jsx(\"div\",{className:\"page__content\",children:/*#__PURE__*/_jsxs(CurrentUserContext.Provider,{value:currentUser,children:[/*#__PURE__*/_jsx(Header,{loggedIn:loggedIn,email:email,onSignOut:handleSignOut}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/sign-up\",children:/*#__PURE__*/_jsx(Register,{onRegister:registration})}),/*#__PURE__*/_jsx(Route,{path:\"/sign-in\",children:/*#__PURE__*/_jsx(Login,{onLogin:authorize})}),/*#__PURE__*/_jsx(ProtectedRoute,{path:\"/\",component:Main,loggedIn:loggedIn,cards:cards,onCardLike:handleCardLike,onCardDelete:handleCardDelete,onEditProfile:handleEditProfileClick,onAddPlace:handleAddPlaceClick,onEditAvatar:handleEditAvatarClick,onCardClick:handleCardClick})]}),/*#__PURE__*/_jsx(Footer,{}),/*#__PURE__*/_jsx(EditProfilePopup,{isOpen:isEditProfilePopupOpen,onUpdateUser:handleUpdateUser,onClose:closeAllPopups}),/*#__PURE__*/_jsx(EditAvatarPopup,{isOpen:isEditAvatarPopupOpen,onUpdateAvatar:handleUpdateAvatar,onClose:closeAllPopups}),/*#__PURE__*/_jsx(AddPlacePopup,{isOpen:isAddPlacePopupOpen,onAddPlace:handleAddPlaceSubmit,onClose:closeAllPopups}),/*#__PURE__*/_jsx(ConfirmCardDelete,{isOpen:isDeleteCardPopupOpen,onClose:closeAllPopups}),/*#__PURE__*/_jsx(ImagePopup,{card:selectedCard,isOpen:isImagePopupOpen,onClose:closeAllPopups}),/*#__PURE__*/_jsx(InfoToolTip,{isOpen:isInfoToolTipOpen,authMessage:authMessage,onClose:closeAllPopups})]})});}export default App;","map":{"version":3,"sources":["/Users/AleksiTarasov/Desktop/develop/react-mesto-auth/src/components/App.js"],"names":["React","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","ConfirmCardDelete","api","CurrentUserContext","ProtectedRoute","Route","Switch","useHistory","Register","Login","InfoToolTip","successImg","notSuccessImg","auth","App","useState","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isImagePopupOpen","setImagePopupOpen","isDeleteCardPopupOpen","setDeleteCardPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","isInfoToolTipOpen","setInfoToolTipOpen","email","setEmail","img","text","authMessage","setAuthMessage","history","useEffect","Promise","all","getUserInfo","getCards","then","userData","apiData","catch","err","console","log","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","patchUserInfo","closeAllPopups","handleAddPlaceSubmit","postCard","handleUpdateAvatar","patchUserAvatar","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleInfoToolTipOpen","handleInfoToolTipAuthMessage","registration","password","register","res","status","setTimeout","push","authorize","authorization","data","checkToken","jwt","localStorage","getItem","handleSignOut","removeItem"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport ImagePopup from './ImagePopup'\nimport ConfirmCardDelete from './ConfirmCardDelete'\nimport api from '../utils/api'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport ProtectedRoute from './ProtectedRoute'\nimport { Route, Switch, useHistory } from 'react-router-dom'\nimport Register from './Register'\nimport Login from './Login'\nimport InfoToolTip from './InfoTooltip'\n//Иконки для попапа\nimport successImg from '../images/success.jpeg'\nimport notSuccessImg from '../images/not-success.jpeg'\nimport auth from '../utils/auth'\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false)\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false)\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false)\n    const [isImagePopupOpen, setImagePopupOpen] = React.useState(false)\n    {/* Заготовка для реализации попапа с подтверждением удаления карточки */ }\n    const [isDeleteCardPopupOpen, setDeleteCardPopupOpen] = React.useState(false)\n    const [selectedCard, setSelectedCard] = React.useState({})\n    const [currentUser, setCurrentUser] = React.useState({})\n    const [cards, setCards] = React.useState([])\n    {/* Устанавливаем стейт для 12 спринта */ }\n    const [loggedIn, setLoggedIn] = React.useState(false)\n    const [isInfoToolTipOpen, setInfoToolTipOpen] = React.useState(false)\n    const [email, setEmail] = React.useState('')\n    const [authMessage, setAuthMessage] = React.useState({ img: '', text: '' })\n    const history = useHistory();\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getCards()])\n            .then(([userData, apiData]) => {\n                setCurrentUser(userData)\n                setCards(apiData)\n                // console.log(apiData)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards((state) => state.filter((c) => c !== card))\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleUpdateUser(userData) {\n        api.patchUserInfo(userData)\n            .then((userData) => {\n                setCurrentUser(userData)\n                // console.log(userData)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleAddPlaceSubmit(apiData) {\n        api.postCard(apiData)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleUpdateAvatar(userData) {\n        api.patchUserAvatar(userData)\n            .then((userData) => {\n                setCurrentUser(userData)\n                // console.log(userData)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupOpen(true)\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true)\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true)\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n        setImagePopupOpen(true)\n    }\n\n    function handleInfoToolTipOpen() {\n        setInfoToolTipOpen(true)\n    }\n    function handleInfoToolTipAuthMessage({ img, text }) {\n        setAuthMessage({ img: img, text: text })\n    }\n\n    function registration(password, email) {\n        auth.register(password, email)\n            .then((res) => {\n                if (res.status === 201) {\n                    handleInfoToolTipAuthMessage({ img: successImg, text: 'Вы успешно зарегестрировались!' })\n                    handleInfoToolTipOpen();\n                    setTimeout(history.push, 3500, '/sign-in');\n                    setTimeout(closeAllPopups, 2500)\n                } else {\n                    handleInfoToolTipAuthMessage({ img: notSuccessImg, text: 'Что-то пошло не так! Попробуйте еще раз!' })\n                    handleInfoToolTipOpen()\n                    setTimeout(closeAllPopups, 2500);\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function authorize(password, email) {\n        auth.authorization(password, email)\n            .then((data) => {\n                auth.checkToken(data)\n                    .then((data) => {\n                        setEmail(data.data.email)\n                    })\n                    .catch(err => console.log(err))\n                setLoggedIn(true);\n                history.push('/');\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    React.useEffect(() => {\n        const jwt = localStorage.getItem('jwt')\n        if (jwt) {\n            auth.checkToken(jwt)\n                .then((data) => {\n                    setLoggedIn(true)\n                    setEmail(data.data.email)\n                    history.push('/')\n                })\n                .catch(err => console.log(err))\n        }\n    }, [history])\n\n    function handleSignOut() {\n        setLoggedIn(false)\n        localStorage.removeItem('jwt')\n        setEmail('')\n        history.push('/sign-in')\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false)\n        setAddPlacePopupOpen(false)\n        setImagePopupOpen(false)\n        setSelectedCard({})\n        setInfoToolTipOpen(false)\n    }\n\n    return (\n        <div className=\"page__content\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header loggedIn={loggedIn} email={email} onSignOut={handleSignOut} />\n                <Switch>\n                    {/* Регистрация нового пользователя */}\n                    <Route path=\"/sign-up\">\n                        <Register\n                            onRegister={registration}\n                        />\n                    </Route>\n                    {/* Авторизация существующего пользователя */}\n                    <Route path=\"/sign-in\">\n                        <Login\n                            onLogin={authorize}\n                        />\n                    </Route>\n                    {/* Отрисовываем сайт для авторизованного пользователя */}\n                    <ProtectedRoute\n                        path=\"/\"\n                        component={Main}\n                        loggedIn={loggedIn}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n                    />\n                </Switch>\n                <Footer />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onUpdateUser={handleUpdateUser}\n                    onClose={closeAllPopups}\n                />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    onClose={closeAllPopups}\n                />\n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onAddPlace={handleAddPlaceSubmit}\n                    onClose={closeAllPopups}\n                />\n\n                {/* Заготовка для реализации попапа с подтверждением удаления карточки */}\n                <ConfirmCardDelete\n                    isOpen={isDeleteCardPopupOpen}\n                    onClose={closeAllPopups}\n                />\n\n                <ImagePopup\n                    card={selectedCard}\n                    isOpen={isImagePopupOpen}\n                    onClose={closeAllPopups}\n                />\n                <InfoToolTip\n                    isOpen={isInfoToolTipOpen}\n                    authMessage={authMessage}\n                    onClose={closeAllPopups}\n                />\n            </CurrentUserContext.Provider>\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}