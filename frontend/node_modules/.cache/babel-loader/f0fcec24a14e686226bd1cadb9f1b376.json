{"ast":null,"code":"export const address = 'https://mesto.nomoreparties.co';\nexport const register = (email, password) => {\n  return fetch(`${address}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkServerResponseAuth(res));\n};\nexport const authorize = (email, password) => {\n  return fetch(`${address}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => checkServerResponseAuth(res));\n};\nexport const checkToken = token => {\n  return fetch(`${address}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => checkServerResponseAuth(res));\n};\n\nfunction checkServerResponseAuth(res) {\n  if (!res.ok) {\n    return res.json();\n  } // Если происходит ошибка, отклоняем промис\n\n\n  return Promise.reject(`${res.status}`);\n}","map":{"version":3,"sources":["/Users/AleksiTarasov/Desktop/develop/react-mesto-auth/src/utils/auth.js"],"names":["address","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","checkServerResponseAuth","authorize","checkToken","token","Authorization","ok","json","Promise","reject","status"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,gCAAhB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACrC,SAAOC,KAAK,CAAE,GAAEJ,OAAQ,SAAZ,EAAsB;AAC9BK,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFqB;AAK9BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AALwB,GAAtB,CAAL,CAOFO,IAPE,CAOGC,GAAG,IAAIC,uBAAuB,CAACD,GAAD,CAPjC,CAAP;AAQH,CATE;AAWH,OAAO,MAASE,SAAS,GAAG,CAACX,KAAD,EAAQC,QAAR,KAAqB;AAC7C,SAAOC,KAAK,CAAE,GAAEJ,OAAQ,SAAZ,EAAsB;AAC9BK,IAAAA,MAAM,EAAE,MADsB;AAE9BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFqB;AAK9BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AALwB,GAAtB,CAAL,CAOFO,IAPE,CAOGC,GAAG,IAAIC,uBAAuB,CAACD,GAAD,CAPjC,CAAP;AAQH,CATM;AAWP,OAAO,MAASG,UAAU,GAAIC,KAAD,IAAW;AACpC,SAAOX,KAAK,CAAE,GAAEJ,OAAQ,WAAZ,EAAwB;AAChCK,IAAAA,MAAM,EAAE,KADwB;AAEhCC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELU,MAAAA,aAAa,EAAG,UAASD,KAAM;AAF1B;AAFuB,GAAxB,CAAL,CAOFL,IAPE,CAOGC,GAAG,IAAIC,uBAAuB,CAACD,GAAD,CAPjC,CAAP;AAQH,CATM;;AAWP,SAASC,uBAAT,CAAiCD,GAAjC,EAAsC;AAClC,MAAI,CAACA,GAAG,CAACM,EAAT,EAAa;AACT,WAAON,GAAG,CAACO,IAAJ,EAAP;AACH,GAHiC,CAIlC;;;AACA,SAAOC,OAAO,CAACC,MAAR,CAAgB,GAAET,GAAG,CAACU,MAAO,EAA7B,CAAP;AACH","sourcesContent":["export const address = 'https://mesto.nomoreparties.co'\n\nexport const register = (email, password) => {\n        return fetch(`${address}/signup`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email, password})\n        })\n            .then(res => checkServerResponseAuth(res))\n    }\n\n    export const    authorize = (email, password) => {\n        return fetch(`${address}/signin`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email, password})\n        })\n            .then(res => checkServerResponseAuth(res))\n    }\n\n    export const    checkToken = (token) => {\n        return fetch(`${address}/users/me`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            }\n        })\n            .then(res => checkServerResponseAuth(res))\n    }\n\n    function checkServerResponseAuth(res) {\n        if (!res.ok) {\n            return res.json()\n        }\n        // Если происходит ошибка, отклоняем промис\n        return Promise.reject(`${res.status}`)\n    }\n\n"]},"metadata":{},"sourceType":"module"}